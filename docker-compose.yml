version: "3.5"

services:
  deno-api-1:  &deno-api
    build: .
    restart: always
    # Lembre-se de que seu serviço HTTP deve estar hospedado num repositório
    # publicamente acessível! Ex.: hub.docker.com
    image: ana/minha-api-matadora:latest
    hostname: deno-api-1
    environment:
      - DB_HOSTNAME=db
    # Não é necessário expor qualquer porta além da porta do load balancer,
    # mas é comum as pessoas o fazerem para testaremsuas APIs e conectarem
    # ao banco de dados na fase de desenvolvimento.
    ports:
      - "8081:9999"
    deploy:
      resources:
        limits:
          cpus: "0.66"
          memory: "270MB"
    volumes:
          - db-volume:./db/

  deno-api-2:
      <<: *deno-api 
      hostname: deno-api-2
      ports:
        - "8082:9999"
  

  caddy:
    image: caddy:2.7.6-alpine
    restart: unless-stopped
    ports:
        # Obrigatório expor/usar a porta 9999 no load balancer!
      - "9999:9999" 
    volumes:
        - ./Caddyfile:/etc/caddy/Caddyfile
    depends_on:
      - deno-api
    deploy:
      resources:
        limits:
          cpus: "0.18"
          memory: "10MB"


# O uso do modo `bridge` deve ser adequado à carga que será usada no teste.
# A edição anterior se beneficiou do modo host pois o volume de requisições
# era relativamente alto e a virtualização da rede se tornou um gargalo, mas
# este modo é mais complexo de ser configurado. Fique à vontade para usar o
# modo que quiser desde que não conflite com portas trivialmente usadas em um
# SO.
networks:
  default:
    driver: bridge
    name: rinha-nginx-2024q1

volumes:
  db-volume: